@use '../util' as *;

html {
	font-size: 100%;
	box-sizing: border-box;
  max-width: 100vw;
  overflow: hidden;
}

*,
*::before,
*::after {
	box-sizing: inherit;
}

body {
	// background: gray;
	margin: 0;
	padding: 0;
}



.flex {
  display: flex;

  &-c {
    flex-direction: column;
  }

  &-jc-sb {
    justify-content: space-between;
  }

  &-jc-c {
    justify-content: center;
  }

  &-jc-s {
    justify-content: start;
  }

  &-jc-e{
    justify-content: end;
  }

  &-ai-c {
    align-items: center;
  }

  &-ai-s {
    align-items: flex-start;
  }
}

.grid{
  display: grid;

  &-left{
    grid-template-columns: auto 1fr;
  }

  &-right{
    grid-template-columns: 1fr auto;
  }

  &-lr{
    grid-template-columns: 1fr 1fr;
  }

  &-rp{
    grid-gap: rem(8);
    grid-template-columns: 1fr repeat(3, rem(40));
  }
}

// visibility
.hide-for-mobile {
  @include breakpoints-down(medium) {
    display: None;
  }
}

.hide-for-desktop {
  @include breakpoints-up(large) {
    display: None;
  }
}

.pad {
  // small left - 8px
  &-l {
    padding-left: toRem(37);
    @include breakpoints-up(large) {
      padding-left: toRem(164);
    }
  }

  &-r {
    padding-right: toRem(37);
    @include breakpoints-up(large) {
      padding-right: toRem(164);
    }
  }

  &-lr {
    padding-left: rem(37);
    padding-right: rem(37);

    @include breakpoints-up(large) {
      padding-left: toRem(162);
      padding-right: toRem(162);
    }
  }
}

// margin
.m{
  margin: 0;

  &-s{
    margin-bottom: rem(8);
  }

  &-l{
    margin-bottom: rem(16);
  }

  &-xl{
    margin-bottom: rem(40);
  }
}
:root{--font-body:Arial,sans-serif;--rubik:"Rubik",sans-serif;--black:#000;--pale-violet:#d89eff;--moderate-violet:#9241c8;--desaturated-dark-violet:#6e5d7e;--grayish-blue:#c6cacd;--dark-grayish-violet:#a39daa;--light-magenta:#e942ff;--light-violet:#8838ff;--blue-purple-grad:linear-gradient(135deg,var(--light-violet) 40%,var(--light-magenta));--purple-blue-grad:linear-gradient(135deg,var(--light-magenta) 40%,var(--light-violet));--white:#fff;--light-grayish-violet:#f5f3f7;--very-dark-desaturated-violet:#3e2753;--very-light-magenta:#e570ff;font-family:var(--rubik)}html{box-sizing:border-box;font-size:100%}*,:after,:before{box-sizing:inherit}body{background:gray;margin:0;padding:0}.flex{display:flex}.flex-c{flex-direction:column}.flex-jc-sb{justify-content:space-between}.flex-jc-c{justify-content:center}.flex-jc-s{justify-content:start}.flex-jc-e{justify-content:end}.flex-ai-c{align-items:center}.flex-ai-s{align-items:flex-start}.grid{display:grid}.grid-left{grid-template-columns:auto 1fr}.grid-right{grid-template-columns:1fr auto}.grid-lr{grid-template-columns:1fr 1fr}.grid-rp{grid-gap:.5rem;grid-template-columns:1fr repeat(3,2.5rem)}@media (max-width:71.8125em){.hide-for-mobile{display:None}}@media (min-width:71.875em){.hide-for-desktop{display:None}}.pad-l{padding-left:toRem(31)}@media (min-width:71.875em){.pad-l{padding-left:toRem(164)}}.pad-r{padding-right:toRem(31)}@media (min-width:71.875em){.pad-r{padding-right:toRem(164)}}.pad-lr{padding-left:toRem(31);padding-right:toRem(31)}@media (min-width:71.875em){.pad-lr{padding-left:toRem(162);padding-right:toRem(162)}}.m{margin:0}.m-s{margin-bottom:.5rem}.m-l{margin-bottom:1rem}h1,h2,h3{line-height:1.1;margin-top:0}a,a:active,a:visited{text-decoration:none}.container{margin:0 auto;max-width:69.375rem;padding:0 1.5rem}@media (min-width:71.875em){.container{padding:0;transform:translate(0)}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */